definitions:
  entities.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
  presenter.JsonResponse:
    properties:
      data: {}
      error:
        type: string
      status:
        type: boolean
    type: object
  presenter.User:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /user:
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: Register user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entities.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/presenter.JsonResponse'
            - properties:
                data:
                  $ref: '#/definitions/presenter.User'
              type: object
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/presenter.JsonResponse'
      summary: Create User
      tags:
      - Users
swagger: "2.0"
